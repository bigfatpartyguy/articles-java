@import '../../assets/scss/vars/colors';
$light: map-get($input-colors, light);
$dark: map-get($input-colors, dark);
$error-color: map-get($light, error);
$ring-bg: map-get($input-colors, bg);

%textarea-wrapperCommon {
  display: flex;
  flex-flow: column nowrap;
  width: 100%;
  margin-bottom: 1.5rem;
  label {
    font-size: 1.1rem;
    display: flex;
    justify-content: space-between;
    width: 100%;
    text-align: left;
    margin-bottom: 1rem;
  }
  textarea {
    resize: none;
    width: 100%;
    max-width: 100%;
    height: 150px;
    max-height: 150px;
    overflow-y: auto;
  }
  .error {
    border: 2px solid $error-color;

    &:hover,
    &:focus,
    &:active {
      border-color: transparent;
      box-shadow: 0 0 0 4px $ring-bg, 0 0 0 6px $error-color;
    }
  }
  .errorMsg {
    color: $error-color;
  }
}

.textarea-wrapper {
  @extend %textarea-wrapperCommon;

  &--dark {
    @extend %textarea-wrapperCommon;

    & textarea {
      background-color: map-get($dark, bg);
      border-color: map-get($dark, bg);
      color: map-get($dark, text);
      &:hover,
      &:focus,
      &:active {
        border-color: transparent;
        box-shadow: 0 0 0 4px map-get($dark, bg-ring-hover),
          0 0 0 6px map-get($dark, border-hover);
      }

      &::placeholder {
        color: map-get($dark, placeholder);
      }

      &.error {
        &:hover,
        &:focus,
        &:active {
          border-color: transparent;
          box-shadow: 0 0 0 4px map-get($dark, bg-ring-hover),
            0 0 0 6px $error-color;
        }
      }
    }
  }
}
